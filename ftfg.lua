--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.2.6) ~  Much Love, Ferib 

]]--

do local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function()return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...)local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30)if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v74=v2(v0(v30,16));if v19 then local v78=0;local v79;while true do if (v78==0) then v79=v5(v74,v19);v19=nil;v78=1;end if (v78==1) then return v79;end end else return v74;end end end);local function v20(v31,v32,v33)if v33 then local v75=(v31/((1 + 1)^(v32-1)))%((894 -(669 + 223))^(((v33-(916 -(24 + 891))) -(v32-(2 -1))) + 1 + 0)) ;return v75-(v75%(1 + 0)) ;else local v76=(0 -0) + 0 ;local v77;while true do if ((0 -0)==v76) then v77=(3 -1)^(v32-(1 + 0 + 0)) ;return (((v31%(v77 + v77))>=v77) and (771 -(23 + 747))) or (0 + 0) ;end end end end local function v21()local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22()local v35=492 -(362 + 130) ;local v36;local v37;while true do if (v35==(0 -0)) then v36,v37=v1(v16,v18,v18 + (1052 -(90 + 960)) );v18=v18 + (1484 -(420 + 1063)) + 1 ;v35=2 -1 ;end if (v35==(4 -3)) then return (v37 * 256) + v36 ;end end end local function v23()local v38,v39,v40,v41=v1(v16,v18,v18 + ((4507 -3305) -(713 + 486)) );v18=v18 + 4 ;return (v41 * (56519126 -39741910)) + (v40 * 65536) + (v39 * (862 -(509 + 97))) + v38 ;end local function v24()local v42=v23();local v43=v23();local v44=(2 -1) -0 ;local v45=(v20(v43,1 + 0 ,32 -12 ) * ((978 -(461 + 140 + 375))^(337 -(51 + 254)))) + v42 ;local v46=v20(v43,60 -39 ,1563 -(698 + 834) );local v47=((v20(v43,69 -37 )==(1 -0)) and  -(259 -(196 + 62))) or (1 + 0) ;if (v46==(0 -0)) then if (v45==((2550 -1502) -(404 + 644))) then return v47 * (0 + 0 + 0) ;else v46=(1863 -(413 + 1449)) + 0 ;v44=0 -0 ;end elseif (v46==2047) then return ((v45==(1471 -(912 + 559))) and (v47 * ((1 + 0)/(0 -(0 -0))))) or (v47 * NaN) ;end return v8(v47,v46-(2313 -1290) ) * (v44 + (v45/((952 -(383 + 567))^(1347 -(482 + 813))))) ;end local function v25(v48)local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1940 -(1848 + 91)) );v18=v18 + v48 ;local v50={};for v66=1 + 0 , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...)return {...},v12("#",...);end local function v28()local v51=1362 -(266 + 1096) ;local v52;local v53;local v54;local v55;local v56;local v57;local v58;local v59;while true do if (v51~=(8 -4)) then else while true do if (v52==(5 -3)) then local v90=0 -0 ;local v91;while true do if (v90==(0 + 0)) then v91=623 -(229 + 394) ;while true do if (v91~=1) then else v52=815 -(251 + 561) ;break;end if (v91==0) then local v105=0 + 0 ;while true do if (v105~=(912 -(34 + 877))) then else v91=1740 -(148 + 1591) ;break;end if (v105~=(627 -(20 + 607))) then else v57=nil;v58=nil;v105=1 -0 ;end end end end break;end end end if (v52~=(0 -0)) then else local v92=0 + 0 ;local v93;while true do if (v92~=(1224 -(661 + 563))) then else v93=75 -(25 + 50) ;while true do if ((0 -0)~=v93) then else local v106=0 -0 ;while true do if (v106==1) then v93=1 + 0 ;break;end if (v106==(0 -0)) then v53=0 + 0 ;v54=nil;v106=1;end end end if (v93~=(1 + 0)) then else v52=2 -1 ;break;end end break;end end end if (v52~=3) then else v59=nil;while true do local v98=0 -0 ;local v99;while true do if (v98~=(1979 -(1037 + 942))) then else v99=996 -(406 + 590) ;while true do if (v99~=0) then else local v109=0 -0 ;while true do if (v109==(528 -(189 + 339))) then if (v53==(402 -(62 + 339))) then local v111=0 + 0 ;local v112;while true do if (v111~=(429 -(228 + 201))) then else v112=0 + 0 ;while true do if (1==v112) then local v212=0;local v213;while true do if (v212==(0 + 0)) then v213=1671 -(1333 + 338) ;while true do if (v213~=(0 + 0)) then else local v279=354 -(276 + 78) ;while true do if (v279~=(0 -0)) then else for v300=1 + 0 ,v58 do local v301=0 + 0 ;local v302;local v303;local v304;while true do if (v301==(922 -(569 + 353))) then v302=0 + 0 ;v303=nil;v301=1 -0 ;end if (v301~=(2 -1)) then else v304=nil;while true do if (v302~=(0 -0)) then else local v327=0 -0 ;local v328;while true do if (v327==0) then v328=0 + 0 ;while true do if (v328==(2 -1)) then v302=1 -0 ;break;end if ((0 + 0)==v328) then v303=v21();v304=nil;v328=1;end end break;end end end if (v302~=(2 -1)) then else if (v303==1) then v304=v21()~=(0 + 0) ;elseif (v303==(1 + 1)) then v304=v24();elseif (v303==(1 + 2)) then v304=v25();end v59[v300]=v304;break;end end break;end end end v57[9 -6 ]=v21();v279=1 -0 ;end if (v279==(1709 -(682 + 1026))) then v213=1;break;end end end if (v213~=1) then else v112=1135 -(263 + 870) ;break;end end break;end end end if (v112==(601 -(317 + 282))) then v53=607 -(448 + 157) ;break;end if (v112~=(0 + 0)) then else local v214=1384 -(9 + 1375) ;while true do if (v214~=(507 -(452 + 54))) then else v112=1;break;end if (v214~=0) then else v58=v23();v59={};v214=1 + 0 ;end end end end break;end end end if (v53~=(2 + 0)) then else local v113=0 -0 ;local v114;while true do if (v113~=(0 -0)) then else v114=0;while true do local v198=911 -(787 + 124) ;while true do if ((0 + 0)==v198) then if ((0 -0)==v114) then local v241=0 + 0 ;while true do if (v241==(0 + 0)) then for v285=1,v23() do local v286=0 -0 ;local v287;while true do if (v286~=(392 -(68 + 324))) then else v287=v21();if (v20(v287,595 -(302 + 292) ,1)==(0 + 0)) then local v316=813 -(590 + 223) ;local v317;local v318;local v319;local v320;while true do if (v316==(1 + 0)) then local v325=0;while true do if (v325~=(1259 -(197 + 1062))) then else v319=nil;v320=nil;v325=3 -2 ;end if (v325~=(1200 -(733 + 466))) then else v316=2 + 0 ;break;end end end if (v316==(0 -0)) then local v326=0 -0 ;while true do if (v326~=(0 -0)) then else v317=0 -0 ;v318=nil;v326=829 -(80 + 748) ;end if ((1 + 0)~=v326) then else v316=1;break;end end end if (v316~=(2 + 0)) then else while true do if (3==v317) then if (v20(v319,2 + 1 ,3)~=(1 + 0)) then else v320[1 + 3 ]=v59[v320[2 + 2 ]];end v54[v285]=v320;break;end if (v317~=(5 -3)) then else local v332=0;while true do if ((297 -(166 + 130))==v332) then v317=2 + 1 ;break;end if ((782 -(329 + 453))~=v332) then else local v340=0 + 0 ;while true do if (v340~=(1500 -(732 + 768))) then else if (v20(v319,571 -(90 + 480) ,1)~=(244 -(35 + 208))) then else v320[4 -2 ]=v59[v320[2 + 0 ]];end if (v20(v319,9 -7 ,1947 -(604 + 1341) )~=(1 + 0)) then else v320[1 + 2 ]=v59[v320[592 -(115 + 474) ]];end v340=1;end if (v340~=(1238 -(769 + 468))) then else v332=1;break;end end end end end if (v317==0) then local v333=0 -0 ;while true do if (v333~=(0 + 0)) then else v318=v20(v287,1 + 1 ,442 -(242 + 197) );v319=v20(v287,18 -14 ,13 -7 );v333=41 -(39 + 1) ;end if (v333~=1) then else v317=1 + 0 ;break;end end end if (v317~=1) then else local v334=0 -0 ;while true do if (v334==1) then v317=845 -(800 + 43) ;break;end if (v334~=(288 -(280 + 8))) then else v320={v22(),v22(),nil,nil};if (v318==(0 -0)) then local v341=0;while true do if (v341~=(0 -0)) then else v320[3]=v22();v320[3 + 1 ]=v22();break;end end elseif (v318==(1893 -(866 + 1026))) then v320[6 -3 ]=v23();elseif (v318==(3 -1)) then v320[3]=v23() -(2^(351 -(123 + 212))) ;elseif (v318==3) then local v350=1489 -(175 + 1314) ;local v351;while true do if (v350==0) then v351=938 -(828 + 110) ;while true do if (v351==0) then v320[5 -2 ]=v23() -(2^(1676 -(639 + 1021))) ;v320[739 -(519 + 216) ]=v22();break;end end break;end end end v334=1;end end end end break;end end end break;end end end for v288=1 + 0 ,v23() do v55[v288-1 ]=v28();end v241=1 -0 ;end if (v241~=1) then else v114=1 + 0 ;break;end end end if ((1203 -(915 + 287))~=v114) then else local v242=0;local v243;while true do if ((1244 -(37 + 1207))~=v242) then else v243=0 -0 ;while true do if (v243~=(0 -0)) then else local v295=579 -(43 + 536) ;while true do if (v295~=(0 + 0)) then else for v321=1,v23() do v56[v321]=v23();end return v57;end end end end break;end end end break;end end end break;end end end v109=1655 -(887 + 767) ;end if (v109~=1) then else v99=1 + 0 ;break;end end end if (v99==(1 + 0)) then if (v53==(13 -(5 + 8))) then local v110=0 + 0 ;while true do if (v110~=0) then else local v115=0 -0 ;local v116;while true do if (v115~=0) then else v116=0;while true do if (v116==(1 + 0)) then v110=1 + 0 ;break;end if (v116~=0) then else local v215=257 -(256 + 1) ;while true do if (v215~=(0 + 0)) then else v54={};v55={};v215=1 + 0 ;end if (v215==1) then v116=2 -1 ;break;end end end end break;end end end if (v110~=(1571 -(873 + 696))) then else v53=1;break;end if (v110~=1) then else local v117=95 -(55 + 40) ;local v118;while true do if (v117==(0 + 0)) then v118=0 -0 ;while true do if (v118==(1 + 0)) then v110=8 -6 ;break;end if (v118~=(1005 -(245 + 760))) then else local v216=1722 -(1419 + 303) ;while true do if (v216~=(1 -0)) then else v118=4 -3 ;break;end if (v216==0) then v56={};v57={v54,v55,nil,v56};v216=3 -2 ;end end end end break;end end end end end break;end end break;end end end break;end if (v52==1) then local v94=765 -(575 + 190) ;while true do if (v94~=(800 -(123 + 677))) then else v55=nil;v56=nil;v94=1 + 0 ;end if (v94~=1) then else v52=1 + 1 ;break;end end end end break;end if (v51==1) then v54=nil;v55=nil;v51=2;end if (v51~=(0 -0)) then else v52=0 -0 ;v53=nil;v51=2 -1 ;end if (v51==(507 -(110 + 394))) then v58=nil;v59=nil;v51=1184 -(241 + 939) ;end if (v51~=(1961 -(760 + 1199))) then else v56=nil;v57=nil;v51=4 -1 ;end end end local function v29(v60,v61,v62)local v63=v60[1];local v64=v60[2];local v65=v60[3];return function(...)local v68=0;local v69;local v70;local v71;local v72;local v73;while true do if (v68==1) then v71={...};v72=v12("#",...) -1 ;v68=2;end if (v68==0) then v69=1;v70= -1;v68=1;end if (v68==2) then v73=nil;function v73()local v80=v63;local v81=v64;local v82=v65;local v83=v27;local v84={};local v85={};local v86={};for v95=0 + 0 ,v72 do if ((v95>=v82) or ((2115 -(71 + 468))>=(2782 + 219))) then v84[v95-v82 ]=v71[v95 + (1 -0) ];else v86[v95]=v71[v95 + 1 + 0 ];end end local v87=(v72-v82) + 1 + 0 ;local v88;local v89;while true do local v96=1641 -(953 + (1555 -867)) ;while true do if ((v96==1) or ((894 + 750)<=(1012 -670))) then if (((3696 + 958)>=(12046 -7579)) and (v89<=19)) then if ((v89<=9) or (3950<=(4187 -(875 + 611)))) then if (((903 + 541)==(3426 -((2356 -619) + 245))) and (v89<=(491 -(206 + (829 -(501 + 47)))))) then if (((1518 -1166)<(3956 -2028)) and (v89<=(3 -2))) then if (((31 + 4341)>=(2184 -((442 -247) + (75 -48)))) and (v89>(634 -(7 + 627)))) then do return v86[v88[2]];end else local v119=0;local v120;local v121;while true do if (((4697 -2730)>=(1220 + 722)) and ((0 -0)==v119)) then v120=0 -0 ;v121=nil;v119=1 -0 ;end if ((v119==((1971 -(159 + 587)) -(1006 + 218))) or ((2394 -(860 + 836))>=(2577 -1802))) then while true do if (((3500 -(226 + 1713))<(4265 -(430 + 276))) and (v120==(621 -(431 + 190)))) then v121=v88[(4 -2) + 0 ];v86[v121](v13(v86,v121 + 1 + 0 ,v88[966 -(37 + 926) ]));break;end end break;end end end elseif ((v89<=(1 + 1)) or ((2927 -1165)>4436)) then if (((2199 + 2417)>=3641) and (v86[v88[2 + 0 ]]~=v88[10 -6 ])) then v69=v69 + (821 -((430 -170) + 560)) ;else v69=v88[1759 -(535 + 1221) ];end elseif ((v89==(6 -3)) or ((1948 -(658 + 183))>(902 + 3811))) then v86[v88[4 -2 ]][v88[7 -4 ]]=v86[v88[2 + 0 + 2 ]];else local v168=(1642 -640) -(239 + 502 + 261) ;local v169;local v170;local v171;local v172;local v173;while true do if (((59 + 3148)>(2541 -(35 + 65 + 1747))) and (v168==(1367 -(1125 + 240)))) then v173=nil;while true do if ((v169==(1 + 0)) or ((332 + 542 + 1929)<=1393)) then local v244=0;local v245;while true do if (((2340 + 521)>(2174 -(75 + 268))) and (0==v244)) then v245=0;while true do if ((v245==(1 + (306 -(97 + 209)))) or ((3709 -(9 + 64))<=(9575 -6326))) then v169=1120 -(991 + 127) ;break;end if ((3959>1985) and (v245==(0 + 0))) then v70=(v172 + v170) -(1402 -(1263 + 138)) ;v173=0;v245=1;end end break;end end end if ((v169==(114 -(20 + 92))) or (1821>(14730 -10587))) then for v254=v170,v70 do local v255=1327 -(134 + 341 + 852) ;local v256;while true do if (((3117 -(352 + 914))>=(857 + 765)) and ((624 -(262 + 362))==v255)) then v256=0 -0 ;while true do if ((v256==((2251 -1350) -(828 + 73))) or (3435>(2182 + (2511 -(178 + 318))))) then v173=v173 + 1 + 0 ;v86[v254]=v171[v173];break;end end break;end end end break;end if (((636 -(360 + 276))==v169) or ((1662 + 1203)==3558)) then local v246=(152 + 292) -(197 + (551 -304)) ;local v247;while true do if (((4861 -(119 + 1204))==(11 + 3527)) and (v246==(1112 -(233 + 879)))) then v247=0 -0 ;while true do if (((734 + 1334)>(526 + 589)) and (v247==(0 + 0))) then v170=v88[1 + 1 ];v171,v172=v83(v86[v170](v13(v86,v170 + (1 -(0 -0)) ,v88[1 + (1039 -(159 + 878)) ])));v247=1 + 0 ;end if ((v247==1) or ((14370 -9455)<=(766 -148))) then v169=3 -2 ;break;end end break;end end end end break;end if (((215 + 227 + 108)<3953) and (v168==(705 -(602 + (1052 -(384 + 565)))))) then local v217=0 -0 ;while true do if ((v217==(1271 -(409 + 862))) or (2766<=617)) then v169=0 + 0 ;v170=nil;v217=3 -2 ;end if (((33 -25)<210) and (v217==(1 -0))) then v168=1 + 0 ;break;end end end if ((((3068 -(689 + 1279)) -863)<(74 + 606)) and (v168==(2 -1))) then local v218=1212 -(37 + 1175) ;while true do if ((v218==1) or ((610 -(75 + 5))>(5385 -3858))) then v168=892 -(224 + 616 + 50) ;break;end if (((4902 -(41 + 1067))==3794) and ((0 -0)==v218)) then v171=nil;v172=nil;v218=1;end end end end end elseif ((3757>2807) and (v89<=(1 + 1 + 4))) then if ((v89>5) or ((4291 -(526 + 1126))<=((1423 -(822 + 495)) + 682))) then local v122=1932 -(859 + 1073) ;local v123;local v124;local v125;while true do if ((((1268 -(120 + 85)) + 2458)==(4781 -1260)) and (v122==(188 -(109 + 79)))) then v123=1689 -(338 + 1351) ;v124=nil;v122=1;end if ((v122==(1 + 0)) or (3736>=(5697 -(1655 + 198)))) then v125=nil;while true do if (((4616 + 84)>=((13186 + 776) -9718)) and (v123==1)) then for v233=2 -1 , #v85 do local v234=0 -0 ;local v235;while true do if ((v234==(0 -0)) or ((2944 -(547 + 73))==(3468 + 870))) then v235=v85[v233];for v280=0 -0 , #v235 do local v281=1308 -(608 + 700) ;local v282;local v283;local v284;while true do if (((772 + 2535)>(3252 -(413 + 1216))) and (v281==(0 -(0 + 0)))) then v282=v235[v280];v283=v282[1 + 0 ];v281=649 -(384 + 264) ;end if ((587<1834) and (v281==(1 -0))) then v284=v282[2 + 0 ];if (((v283==v86) and (v284>=v124)) or (((3718 + 2146) -(74 + 1785))==(6704 -2481))) then local v309=0 -0 ;local v310;local v311;while true do if ((2510>=(51 + 217)) and (v309==1)) then while true do if (((910 + 1697)>(299 + 798)) and (v310==(0 -0))) then v311=0 -0 ;while true do if (((5510 -(927 + 377))>=(350 + 779)) and (v311==0)) then v125[v284]=v283[v284];v282[3 -2 ]=v125;break;end end break;end end break;end if (((4108 + 502)>(1486 + 1228)) and (((217 + 855) -(311 + 761))==v309)) then v310=331 -(72 + 259) ;v311=nil;v309=3 -(2 + 0) ;end end end break;end end end break;end end end break;end if ((v123==(0 -0)) or (3325>=(1769 + (3941 -(811 + 536))))) then v124=v88[1542 -(618 + 922) ];v125={};v123=966 -(9 + 1 + 955) ;end end break;end end else local v126=815 -(304 + 511) ;local v127;local v128;local v129;local v130;while true do if ((v126==(0 -0)) or ((170 + 1525)==(2094 + 1110))) then v127=0;v128=nil;v126=1070 -(428 + 641) ;end if ((v126==(1 -0)) or (2315>(350 + 3129))) then v129=nil;v130=nil;v126=3 -1 ;end if (((124 + 3650)>(1301 -(125 + 731))) and (v126==(1 + 1))) then while true do if ((v127==2) or (4027<=(6742 -4712))) then for v236=360 -(261 + 98) ,v88[387 -(279 + 104) ] do local v237=0 -0 ;local v238;local v239;while true do if ((v237==(999 -(319 + 680))) or (2924>=3564)) then v238=0 + 0 ;v239=nil;v237=1 + (187 -(117 + 70)) ;end if (((1069 + 28 + 505)>=((738 -486) + 68)) and (v237==(1 + (262 -(92 + 170))))) then while true do if (((0 -0)==v238) or ((2675 -(29 + 26 + 716))>=4425)) then local v292=0 -(0 + 0) ;while true do if (((120 -75)==((458 + 397) -(187 + 623))) and (0==v292)) then local v312=0 -0 ;while true do if (((4282 -(430 + 1510))==2342) and (v312==(2 -1))) then v292=1 + 0 ;break;end if ((v312==(0 -0)) or (4271==3201)) then v69=v69 + 1 + 0 ;v239=v80[v69];v312=(930 -(217 + 711)) -1 ;end end end if (((2606 -(180 + 405))>=(2815 -(1408 + 360))) and (v292==(1 + 0))) then v238=1602 -(106 + 1495) ;break;end end end if (((470 + 2157)>=(223 + 51)) and (v238==1)) then if ((v239[299 -(198 + 100) ]==34) or ((5308 -2013)<=(2699 -2103))) then v130[v236-(1 + 0) ]={v86,v239[922 -(140 + 779) ]};else v130[v236-(3 -2) ]={v61,v239[4 -1 ]};end v85[ #v85 + (1359 -(1123 + 235)) ]=v130;break;end end break;end end end v86[v88[2 + 0 ]]=v29(v128,v129,v62);break;end if (((6356 -(379 + 1081))==(5619 -(524 + 199))) and (v127==(0 + 0))) then local v226=0 + 0 ;while true do if ((v226==1) or (4966<=(1057 -383))) then v127=319 -(178 + 140) ;break;end if ((v226==(51 -(16 + 35))) or (3249>(5745 -((1785 -(411 + 973)) + 635 + 186)))) then v128=v81[v88[4 -1 ]];v129=nil;v226=1;end end end if ((v127==1) or ((2052 + 1419)>((3003 -(64 + 369)) + (3108 -(601 + 368))))) then local v227=1766 -(1614 + 152) ;while true do if (((120 -(67 + 53))==v227) or ((2334 -416)<=622)) then v130={};v129=v10({},{__index=function(v265,v266)local v267=0 -0 ;local v268;local v269;local v270;while true do if ((v267==(0 -0)) or ((1784 + (3286 -(637 + 896)))>=(8685 -4402))) then v268=0 -0 ;v269=nil;v267=2 -1 ;end if ((v267==(742 -(214 + 527))) or (294>=(3946 -(188 + 1509)))) then v270=nil;while true do if ((v268==0) or ((1391 + 397 + 2212)==(3572 -1460))) then local v313=0 -0 ;while true do if ((v313==(0 -0)) or ((195 + 86)>(2508 -(730 + 66)))) then v269=159 -(114 + 45) ;v270=nil;v313=1;end if (((2942 + (5397 -3552))>=(5310 -2840)) and ((2 -1)==v313)) then v268=1;break;end end end if ((2477==((4137 -(1081 + 831)) + 252)) and (v268==1)) then while true do if ((((949 -654) + 117)==(1174 -(493 + 269))) and ((0 + 0 + 0)==v269)) then local v324=0;while true do if (((13270 -(38984 -30399))>(268 + 198)) and (v324==0)) then v270=v130[v266];return v270[455 -(40 + 414) ][v270[1731 -((1437 -754) + 1046) ]];end end end end break;end end break;end end end,__newindex=function(v271,v272,v273)local v274=0;local v275;local v276;while true do if (((473 -298)<=(2370 + 224)) and ((1 + 0)==v274)) then while true do if ((v275==(0 -0)) or (2889<=(3096 -1967))) then v276=v130[v272];v276[1 + 0 ][v276[2 + 0 ]]=v273;break;end end break;end if (((0 + 0)==v274) or ((2022 + 2033)<(3881 -3086))) then v275=0;v276=nil;v274=1 -0 ;end end end});v227=1;end if ((2302>=(2900 -(769 + 526))) and ((1 + 0)==v227)) then v127=1 + 1 ;break;end end end end break;end end end elseif ((v89<=(20 -13)) or ((11069 -7399)<=999)) then if ((v86[v88[503 -(491 + 10) ]]==v88[438 -(202 + 232) ]) or ((3952 -2864)>2483)) then v69=v69 + 1 + 0 ;else v69=v88[3];end elseif (((348 -247)<(5634 -3468)) and (v89>8)) then if ((v86[v88[2 + (0 -0) ]]~=v86[v88[4]]) or ((5125 -(358 + 1176))<(3708 -(21 + 731 + 1059)))) then v69=v69 + 1 ;else v69=v88[618 -(130 + 485) ];end else v69=v88[(4 + 1) -2 ];end elseif ((v89<=(1018 -((1413 -(285 + 841)) + 717))) or ((3579 -(128 + 100))<(295 -119))) then if ((v89<=(27 -16)) or ((385 + 2594)>(11754 -7043))) then if ((1393==1393) and (v89==(1402 -(346 + 1046)))) then v86[v88[2 -0 ]]=v86[v88[999 -(475 + 521) ]][v88[1200 -(310 + 886) ]];else local v133=0 -0 ;local v134;while true do if ((v133==(0 -0)) or ((1140 -(98 + 853))==((1250 -367) + 161))) then v134=v88[2];v86[v134]=v86[v134](v13(v86,v134 + 1 + 0 ,v70));break;end end end elseif (((2150 -1096)<=(1190 + 2254)) and (v89<=12)) then local v135=0;local v136;local v137;local v138;while true do if (((3132 -2501)==631) and ((794 -(390 + 403))==v135)) then v138=nil;while true do if ((v136==(0 -0)) or ((3983 -(166 + 553 + 15))==(4212 -1436))) then local v228=1993 -(761 + 1232) ;while true do if (((1448 -((1105 -(497 + 434)) + 360))<3322) and (v228==(4 -3))) then v136=261 -(168 + 92) ;break;end if (((2250 -(3368 -2288))==(1461 -(70 + 221))) and (v228==(1540 -(322 + 1218)))) then local v258=0;while true do if ((v258==0) or ((2574 + 12)>(4095 -1080))) then v137=v88[1 + 1 ];v138=v86[v137];v258=2 -1 ;end if ((v258==(973 -(164 + (1201 -(83 + 310))))) or ((8499 -(5379 -(566 + 627)))<(4628 -((1260 -678) + 1284)))) then v228=1850 -(322 + 100 + 1427) ;break;end end end end end if ((v136==(1 + 0)) or ((4522 -1335)<((491 -(144 + 50)) + 687))) then for v240=v137 + (756 -(360 + 395)) ,v88[1299 -(689 + 607) ] do v7(v138,v86[v240]);end break;end end break;end if ((v135==(1869 -(1490 + 379))) or ((2315 -(441 + 294))>=(2794 + 934))) then v136=0;v137=nil;v135=1 -0 ;end end elseif ((v89==(30 -17)) or (3478==3222)) then local v176=1789 -(605 + 1184) ;local v177;while true do if ((v176==(0 -0)) or (((5762 -(669 + 1180)) -(205 + 1363))<=(2786 -(321 + 1342)))) then v177=v88[3 -(1 -0) ];v86[v177]=v86[v177]();break;end end else v86[v88[2]][v88[858 -(460 + 395) ]]=v88[10 -6 ];end elseif ((v89<=(13 + 3)) or ((3122 -758)==1827)) then if ((v89==(4 + 11)) or ((2082 -((686 -373) + 425))==(4073 -1198))) then v86[v88[(2 -1) + 1 ]]=v86[v88[1755 -(272 + 1480) ]] + v88[7 -3 ] ;else v86[v88[1 + 1 ]]=v62[v88[530 -(74 + 453) ]];end elseif (((2318 -1663)==(2155 -(1113 + 387))) and (v89<=17)) then v86[v88[1 + 0 + 1 ]]=v86[v88[3 + 0 ]] * v86[v88[(3668 -(1081 + 886)) -(204 + 1493) ]] ;elseif ((v89==(993 -(899 + 76))) or ((10237 -6256)<1433)) then local v180=0;local v181;while true do if ((0==v180) or ((3419 -(826 + 694))<=(793 -(90 + 517)))) then v181=v88[7 -5 ];v86[v181](v86[v181 + (3 -(1888 -(318 + 1568))) ]);break;end end else v62[v88[3]]=v86[v88[5 -3 ]];end elseif (((4271 -3198)>=((1434 + 44) -(95 + 56 + 332))) and (v89<=(17 + 12))) then if (((4986 -2394)>=1160) and (v89<=(1 + 23))) then if (((2686 + 454)<=4417) and (v89<=(857 -(53 + 783)))) then if (((4310 -1921)<(7215 -4561)) and (v89>(3 + 17))) then v61[v88[6 -3 ]]=v86[v88[1 + 1 ]];else v86[v88[652 -(402 + 248) ]]={};end elseif ((v89<=(53 -31)) or (((8761 -5180) + 1398)<(347 + 48))) then local v146=0;local v147;while true do if ((v146==0) or (1327>=(3749 -(999 + 543)))) then v147=v88[1 + 1 ];v86[v147]=v86[v147](v86[v147 + (1104 -((1336 -(624 + 607)) + 998)) ]);break;end end elseif (((5418 -((781 -459) + 991))>=2635) and (v89>(91 -68))) then local v184=0 + 0 ;local v185;local v186;while true do if ((((5907 -(143 + 465)) -3075)<=(4383 -(262 + 853))) and (v184==(0 + 0))) then local v222=0 -0 ;while true do if ((((2296 -(226 + 388)) -(317 + 410 + 326))>613) and ((1 + 0)==v222)) then v184=1 + 0 ;break;end if (((1219 -(618 + (1197 -(159 + 437))))==v222) or (3533<(863 + 533))) then v185=0 + 0 ;v186=nil;v222=(2 + 1) -2 ;end end end if (((3466 -(3749 -(1378 + 104)))<3136) and (v184==(1 + 0 + 0 + 0))) then while true do if ((v185==(0 + 0)) or ((10522 -7713)==(5021 -(1469 + 14)))) then v186=v88[2];v86[v186]=v86[v186](v13(v86,v186 + (726 -(172 + 553)) ,v88[3]));break;end end break;end end elseif (((4675 -(5 + 21))==4649) and (v86[v88[8 -6 ]]==v86[v88[15 -11 ]])) then v69=v69 + 1 ;else v69=v88[3];end elseif ((v89<=(59 -33)) or ((4415 -(231 + 859))==(4715 -(1533 + 440)))) then if ((v89>25) or (((5217 -(957 + 1024)) -1416)<=1753)) then local v148=0;local v149;local v150;local v151;while true do if (((8520 -4637)==(3122 + 761)) and (v148==(1 + 0))) then v151=nil;while true do if ((v149==0) or ((3054 -(33 + 11))>=(4687 -(830 + 238)))) then local v229=58 -(21 + 37) ;while true do if (((0 -0)==v229) or ((3107 -861)>(19647 -14648))) then v150=v88[2];v151=v86[v88[3]];v229=3 -2 ;end if ((v229==1) or ((2818 -(936 + 115))<(1201 -858))) then v149=1310 -(571 + 738) ;break;end end end if (((2186 + (1806 -(242 + 454)))<=(5601 -(266 + 938))) and (v149==1)) then v86[v150 + 1 + 0 ]=v151;v86[v150]=v151[v88[12 -8 ]];break;end end break;end if (((1171 -(939 + 232))==v148) or ((12009 -7203)<(2131 -(1513 + 207)))) then v149=0 -0 ;v150=nil;v148=1;end end else for v163=v88[2],v88[1 + 2 ] do v86[v163]=nil;end end elseif ((v89<=(97 -(62 + 8))) or (4635<=(601 + 1474 + 652))) then if (((12063 -7582)>=(7809 -4540)) and v86[v88[1548 -(1049 + 497) ]]) then v69=v69 + 1 + 0 ;else v69=v88[6 -3 ];end elseif (((10295 -6538)>(41 + 1260 + 393)) and (v89==((167 -77) -62))) then if (((6006 -1764)>=((2049 + 2014) -((317 -(32 + 28)) + 783))) and (v86[v88[1638 -(629 + 1007) ]]<v88[117 -(29 + 84) ])) then v69=v69 + 1 + 0 ;else v69=v88[1055 -(99 + 953) ];end else local v188=(379 + 64) -((515 -219) + 147) ;local v189;local v190;while true do if ((v188==(1 + 0)) or ((1413 -(52 + 192))>(1372 + 274))) then while true do if ((4781>=(886 + 69)) and (0==v189)) then v190=v88[2];do return v13(v86,v190,v190 + v88[3] );end break;end end break;end if ((v188==(1062 -(75 + 987))) or ((1592 + 2309)<=(3464 -(21 + 1)))) then v189=0;v190=nil;v188=(1378 -334) -(465 + 578) ;end end end elseif (((2717 + 340)<3654) and (v89<=34)) then if ((v89<=(78 -47)) or ((652 + 1722 + 150)==(3650 + 1146))) then if ((((999 -669) + 2011)<=(3431 + 6)) and (v89>((1647 -(1221 + 409)) + 13))) then v86[v88[(428 -(209 + 217)) + 0 ]]=v61[v88[3 + 0 ]];else v86[v88[(2465 -1436) -(988 + 39) ]]=v88[125 -(33 + 89) ];end elseif (((1675 -(25 + 453))<(3397 -(589 + 453))) and (v89<=((551 -(445 + 101)) + 27))) then do return;end elseif ((v89>(555 -(267 + 255))) or ((177 -61)>=(4475 -(950 + 144)))) then v86[v88[2 + 0 ]]=v86[v88[4 -1 ]];elseif ((2570>=((1399 + 267) -(32 + 8))) and (v88[1 + 1 ]==v86[v88[13 -(2 + 7) ]])) then v69=v69 + (1305 -(262 + 1042)) ;else v69=v88[3];end elseif ((v89<=(179 -(138 + 5))) or ((4625 -3555)==(2165 + 1134))) then if (((3405 -(558 + 1140))<(3607 -(126 + 10))) and (v89==(309 -(54 + 220)))) then local v156=0 + 0 ;local v157;local v158;local v159;local v160;while true do if ((v156==(0 + 0)) or ((64 + 380)==(1930 + 534))) then v157=v88[2];v158,v159=v83(v86[v157](v86[v157 + (2 -1) ]));v156=1 + 0 + 0 ;end if (((1107 -(285 + 820))==v156) or ((1761 -(588 + 838))>=(889 + 335))) then for v209=v157,v70 do local v210=0 -0 ;local v211;while true do if ((v210==(0 + (1909 -(1113 + 796)))) or (4162>=(12278 -7434))) then v211=545 -(509 + 36) ;while true do if ((((10846 + 174) -8647)>(3540 -(386 + 1098))) and (v211==0)) then v160=v160 + (3 -2) ;v86[v209]=v158[v160];break;end end break;end end end break;end if (((3703 -(1581 + 59))==(580 + 1483)) and ((1 + 0)==v156)) then local v204=(2958 -(475 + 574)) -(609 + 1300) ;while true do if ((((3716 + 604) -2913)<(3546 -(1679 + 139))) and (v204==(0 -0))) then v70=(v159 + v157) -(3 -2) ;v160=0 -0 ;v204=1 + 0 ;end if ((v204==(1 + 0)) or ((7261 -3489)<=(2762 + 154))) then v156=31 -(24 + 5) ;break;end end end end else v86[v88[5 -3 ]]=v29(v81[v88[1 + 2 ]],nil,v62);end elseif ((v89<=((1086 + 388) -(62 + 882 + 493))) or ((500 + 4383)==(460 + 1932))) then v86[v88[2]]=v86[v88[8 -5 ]]/v86[v88[991 -(789 + 198) ]] ;elseif ((v89==38) or ((3371 -(1188 + (1201 -682)))<=(768 + 149))) then local v193=0 + 0 ;local v194;local v195;local v196;local v197;while true do if ((v193==(1114 -(1064 + 49))) or ((319 + 1112)>(2652 + 451))) then v196=nil;v197=nil;v193=2;end if ((v193==(0 + (0 -0))) or (((6374 -3592) -1627)>=(6798 -(5209 -(188 + 52))))) then v194=0 -0 ;v195=nil;v193=1;end if ((v193==(664 -(457 + 205))) or (891>((5676 -2885) -(624 + (996 -(15 + 51)))))) then while true do if ((v194==0) or (2579>(5189 -(358 + 453 + 280)))) then v195=v88[942 -(545 + 395) ];v196=v86[v195];v194=1;end if (((1 + 0)==v194) or (3455>=((3084 -1797) + 2717))) then v197=v88[1 + 2 ];for v261=1838 -(737 + (2311 -1211)) ,v197 do v196[v261]=v86[v195 + v261 ];end break;end end break;end end else v86[v88[2 + 0 ]]();end v69=v69 + (2 -1) ;break;end if ((((0 -0) + 0)==v96) or ((4567 -(685 + 569))>=(4079 -(204 + 234)))) then local v104=0 + 0 ;while true do if ((v104==(0 -0)) or (2402<=1929)) then v88=v80[v69];v89=v88[1679 -(1239 + 439) ];v104=1 -0 ;end if (((6863 -4278)<(5464 -954)) and (v104==1)) then v96=1;break;end end end end end end v68=3;end if (3==v68) then A,B=v27(v11(v73));if  not A[1] then local v97=v60[4][v69] or "?" ;error("Script error at ["   .. v97   .. "]:"   .. A[2] );else return v13(A,2,B);end break;end end end;end return v29(v28(),{},v17)(...);end vv9(),...);end